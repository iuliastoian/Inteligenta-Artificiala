if(Mace4).
assign(domain_size, 5).
end_if.

if(Prover9).
formulas(goals).

Agent4(d4) -> James(d4).

end_of_list.
end_if.

% Avoid using sentence names starting with u, v, w, x, y, z.

% Agents' order in row
	% Agent1: first agent
	% Agent2: second agent
	% Agent3: third agent
	% Agent4: fourth agent
	% Agent5: fifth agent

% Agents' names
	% Austin, James, Jason, Stan, Sterling

% Tie
	% Black, Blue, Green, Purple, Red

% Country
	% Australia, Brazil, Germany, Libya, Russia

% Accessory
	% Clock, Pen, Phone, Ring, Umbrella

% Skill
	% ComputerHacking, Disguise, Driving, MartialArts, Parkour

% Age
	% TwentyFive, Thirty, ThirtyFive, Forty, FortyFive

formulas(assumptions).

% The 5 agents differ
	differentFrom(d1, d2).
	differentFrom(d1, d3).
	differentFrom(d1, d4).
	differentFrom(d1, d5).
	differentFrom(d2, d3).
	differentFrom(d2, d4).
	differentFrom(d2, d5).
	differentFrom(d3, d4).
	differentFrom(d3, d5).
	differentFrom(d4, d5).

% The "differentFrom" relation is symmetrical
	differentFrom(x, y) -> differentFrom(y, x).

	d1 = 0.
	d2 = 1.
	d3 = 2.
	d4 = 3.
	d5 = 4.

	Agent1(0).
	Agent2(1).
	Agent3(2).
	Agent4(3).
	Agent5(4).

% Relation directlyright(x, y) that affirms that "agent y" is directly to the right of "agent x"
	directlyright(d1, d2).
	directlyright(d2, d3).
	directlyright(d3, d4).
	directlyright(d4, d5).

	-directlyright(d1, d1).
	-directlyright(d2, d2).
	-directlyright(d3, d3).
	-directlyright(d4, d4).
	-directlyright(d5, d5).
	-directlyright(d1, d3).
	-directlyright(d2, d4).
	-directlyright(d3, d5).
	-directlyright(d3, d1).
	-directlyright(d4, d2).
	-directlyright(d5, d3).
	-directlyright(d2, d1).
	-directlyright(d3, d2).
	-directlyright(d4, d3).
	-directlyright(d5, d4).
	-directlyright(d1, d4).
	-directlyright(d2, d5).
	-directlyright(d4, d1).
	-directlyright(d5, d2).
	-directlyright(d1, d5).
	-directlyright(d5, d1).

% Relation nextto(x, y) that affirms that "agent y" is next to "agent x"
	directlyright(x, y) | directlyright(y, x) <-> nextto(x, y).
	
% Relation extremity(x) that affirms that "agent x" is at One of the ends.
	extremity(d1).
	extremity(d5).
	
	-extremity(d2).
	-extremity(d3).
	-extremity(d4).
	
% Relation right(x, y) that affirms that "agent y" is somewhere to the right of "agent x"
	right(d1, d3).
	right(d2, d4).
	right(d3, d5).
	right(d1, d4).
	right(d2, d5).
	right(d1, d5).
	right(d1, d2).
	right(d4, d5).
	right(d2, d3).
	right(d3, d4).
	
	-right(d2, d1).
	-right(d3, d2).
	-right(d4, d3).
	-right(d5, d4).
	-right(d1, d1).
	-right(d2, d2).
	-right(d3, d3).
	-right(d4, d4).
	-right(d5, d5).
	-right(d3, d1).
	-right(d4, d2).
	-right(d5, d3).
	-right(d4, d1).
	-right(d5, d2).
	-right(d5, d1).

% Each agent has different characteristics
	Agent1(x) | Agent2(x) | Agent3(x) | Agent4(x) | Agent5(x).
	Austin(x) | James(x) | Jason(x) | Stan(x) | Sterling(x).
	Black(x) | Blue(x) | Green(x) | Purple(x) | Red(x).
	Australia(x) | Brazil(x) | Germany(x) | Libya(x) | Russia(x).
	Clock(x) | Pen(x) | Phone(x) | Ring(x) | Umbrella(x).
	ComputerHacking(x) | Disguise(x) | Driving(x) | MartialArts(x) | Parkour(x).
	TwentyFive(x) | Thirty(x) | ThirtyFive(x) | Forty(x) | FortyFive(x).

% Each property applies at most to one agent
	Austin(x) & Austin(y) -> -differentFrom(x, y).
	James(x) & James(y) -> -differentFrom(x, y).
	Jason(x) & Jason(y) -> -differentFrom(x, y).
	Stan(x) & Stan(y) -> -differentFrom(x, y).
	Sterling(x) & Sterling(y) -> -differentFrom(x, y).

	Black(x) & Black(y) -> -differentFrom(x, y).
	Blue(x) & Blue(y) -> -differentFrom(x, y).
	Green(x) & Green(y) -> -differentFrom(x, y).
	Purple(x) & Purple(y) -> -differentFrom(x, y).
	Red(x) & Red(y) -> -differentFrom(x, y).

	Australia(x) & Australia(y) -> -differentFrom(x, y).
	Brazil(x) & Brazil(y) -> -differentFrom(x, y).
	Germany(x) & Germany(y) -> -differentFrom(x, y).
	Libya(x) & Libya(y) -> -differentFrom(x, y).
	Russia(x) & Russia(y) -> -differentFrom(x, y).

	Clock(x) & Clock(y) -> -differentFrom(x, y).
	Pen(x) & Pen(y) -> -differentFrom(x, y).
	Phone(x) & Phone(y) -> -differentFrom(x, y).
	Ring(x) & Ring(y) -> -differentFrom(x, y).
	Umbrella(x) & Umbrella(y) -> -differentFrom(x, y).

	ComputerHacking(x) & ComputerHacking(y) -> -differentFrom(x, y).
	Disguise(x) & Disguise(y) -> -differentFrom(x, y).
	Driving(x) & Driving(y) -> -differentFrom(x, y).
	MartialArts(x) & MartialArts(y) -> -differentFrom(x, y).
	Parkour(x) & Parkour(y) -> -differentFrom(x, y).

	TwentyFive(x) & TwentyFive(y) -> -differentFrom(x, y).
	Thirty(x) & Thirty(y) -> -differentFrom(x, y).
	ThirtyFive(x) & ThirtyFive(y) -> -differentFrom(x, y).
	Forty(x) & Forty(y) -> -differentFrom(x, y).
	FortyFive(x) & FortyFive(y) -> -differentFrom(x, y).

%Clues

	%1. Austin is next to the agent wearing the Black tie.
	Austin(x) & Black(y) -> nextto(y, x).
	
	%2. The master of Disguise is exactly to the right of the agent that has a spy Umbrella.
	Disguise(x) & Umbrella(y) -> directlyright(y, x).
	
	%3. The 35 years old agent is going to a mission on Tripoli.
	ThirtyFive(x) -> Libya(x).
	
	%4. James is the youngest secret agent.
	James(x) -> TwentyFive(x).
	
	%5. The agent that is going to Australia is next to the agent that is specialized in Parkour.
	Australia(x) & Parkour(y) -> nextto(y, x).
	
	%6. James is exactly to the right of the agent that has a special Clock.
	James(x) & Clock(y) -> directlyright(y, x).
	
	%7. The spy that has an unique Umbrella is between the 40 years old agent and Austin, in that order.
	Forty(x) & Umbrella(y) & Austin(z) -> right(x, y) & right(y, z).
	
	%8. Stan is next to the agent that is going to Asia.
	Stan(x) & Russia(y) -> nextto(y, x).
	
	%9. Sterling is at one of the ends.
	Sterling(x) -> extremity(x).
	
	%10. The man wearing the Red tie is 40 years old.
	Red(x) -> Forty(x).
	
	%11. The spy that is going to South America is exactly to the left of the 45 years old spy.
	Brazil(x) & FortyFive(y) -> directlyright(x, y).
	
	%12. Jason is exactly to the left of Austin.
	Jason(x) & Austin(y) -> directlyright(x, y).
	
	%13. The Driver expert is next to the 30 years old man.
	Driving(x) & Thirty(y) -> nextto(y, x).
	
	%14. The 35 years old agent is next to the agent that is going to Sydney.
	ThirtyFive(x) & Australia(y) -> nextto(y, x).
	
	%15. The agent with advanced knowledge of Hacking is exactly to the left of the 35 years old man.
	ComputerHacking(x) & ThirtyFive(y) -> directlyright(x, y).
	
	%16. The spy wearing the Purple tie is next to the Geek spy.
	Purple(x) & ComputerHacking(y) -> nextto(y, x).
	
	%17. Austin is 30.
	Austin(x) -> Thirty(x).
	
	%18. The agent that has a special Phone is exactly to the left of the agent that is going to Africa.
	Phone(x) & Libya(y) -> directlyright(x, y).
	
	%19. The agent wearing a spy Ring is somewhere to the right of the agent wearing the Purple tie.
	Ring(x) & Purple(y) -> right(y, x).
	
	%20. At the second position is the spy wearing the Green tie.
	Agent2(x) -> Green(x).
	
	%21. The spy that is going to Australia is exactly to the right of the 30 years old spy.
	Australia(x) & Thirty(y) -> directlyright(y, x).

end_of_list.
